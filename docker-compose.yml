version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: loadtest-mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - loadtest-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Broker & Cache
  redis:
    image: redis:7.2-alpine
    container_name: loadtest-redis
    ports:
      - "6379:6379"
    command: redis-server --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    networks:
      - loadtest-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: loadtest-backend
    ports:
      - "8000:8000"
    environment:
      - SERVICE_TYPE=backend
      - MONGODB_URL=mongodb://mongodb:27017
      - MONGODB_DATABASE=loadtest_db
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/1
      - APP_ENV=development
      - LOG_LEVEL=info
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - loadtest-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Celery Worker 1
  worker1:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: loadtest-worker1
    environment:
      - SERVICE_TYPE=worker
      - MONGODB_URL=mongodb://mongodb:27017
      - MONGODB_DATABASE=loadtest_db
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/1
      - WORKER_CONCURRENCY=4
      - WORKER_PREFETCH_MULTIPLIER=4
      - LOG_LEVEL=info
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - loadtest-network

  # Celery Worker 2
  worker2:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: loadtest-worker2
    environment:
      - SERVICE_TYPE=worker
      - MONGODB_URL=mongodb://mongodb:27017
      - MONGODB_DATABASE=loadtest_db
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/1
      - WORKER_CONCURRENCY=4
      - WORKER_PREFETCH_MULTIPLIER=4
      - LOG_LEVEL=info
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - loadtest-network

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: loadtest-frontend
    ports:
      - "3000:80"
    environment:
      - VITE_API_URL=http://localhost:8000/api
    depends_on:
      - backend
    networks:
      - loadtest-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 3s
      retries: 3

networks:
  loadtest-network:
    driver: bridge

volumes:
  mongodb_data:
  redis_data:
