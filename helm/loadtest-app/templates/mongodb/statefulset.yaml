{{- if .Values.mongodb.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "loadtest-app.fullname" . }}-mongodb
  labels:
    {{- include "loadtest-app.componentLabels" (dict "component" "mongodb" "root" .) | nindent 4 }}
spec:
  serviceName: {{ include "loadtest-app.fullname" . }}-mongodb
  replicas: 1
  selector:
    matchLabels:
      {{- include "loadtest-app.componentSelectorLabels" (dict "component" "mongodb" "root" .) | nindent 6 }}
  template:
    metadata:
      annotations:
        {{- with .Values.mongodb.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "loadtest-app.componentSelectorLabels" (dict "component" "mongodb" "root" .) | nindent 8 }}
    spec:
      {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "loadtest-app.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.mongodb.podSecurityContext | nindent 8 }}
      containers:
      - name: mongodb
        securityContext:
          {{- toYaml .Values.mongodb.securityContext | nindent 10 }}
        image: "{{ .Values.mongodb.image.repository }}:{{ .Values.mongodb.image.tag }}"
        imagePullPolicy: {{ .Values.mongodb.image.pullPolicy }}
        ports:
        - containerPort: 27017
          name: mongodb
          protocol: TCP
        {{- if .Values.mongodb.auth.enabled }}
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          value: "root"
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "loadtest-app.fullname" . }}-mongodb-secret
              key: mongodb-root-password
        - name: MONGO_INITDB_DATABASE
          value: {{ .Values.mongodb.auth.database | quote }}
        {{- end }}
        volumeMounts:
        - name: data
          mountPath: /data/db
        resources:
          {{- toYaml .Values.mongodb.resources | nindent 10 }}
        livenessProbe:
          exec:
            command:
            - mongosh
            - --eval
            - "db.adminCommand('ping')"
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 6
        readinessProbe:
          exec:
            command:
            - mongosh
            - --eval
            - "db.adminCommand('ping')"
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 10
          failureThreshold: 6
      {{- with .Values.mongodb.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.mongodb.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.mongodb.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  {{- if .Values.mongodb.persistence.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: data
      labels:
        {{- include "loadtest-app.componentLabels" (dict "component" "mongodb" "root" .) | nindent 8 }}
    spec:
      accessModes: {{ .Values.mongodb.persistence.accessModes }}
      {{- if .Values.mongodb.persistence.storageClass }}
      storageClassName: {{ .Values.mongodb.persistence.storageClass | quote }}
      {{- end }}
      resources:
        requests:
          storage: {{ .Values.mongodb.persistence.size | quote }}
  {{- else }}
      volumes:
      - name: data
        emptyDir: {}
  {{- end }}
{{- end }}
